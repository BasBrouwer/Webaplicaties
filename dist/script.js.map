{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/script.es6"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","initMap","center","google","maps","LatLng","mapOptions","zoom","map","Map","document","getElementById","dataReq","url","token","xmlHttp","XMLHttpRequest","onreadystatechange","readyState","status","parseData","responseText","open","send","data","item","JSON","parse","newObject","name","id","fall","lat","reclat","long","reclong","year","geo","geolocation","objectArray","push","marker","pos","Number","lng","Marker","position","clicable","Date","toUTCString","substring","markers","MarkerClusterer","imagePath","infoWindow","infowindow","InfoWindow","content","event","addListener","setContent","this","searchBox","input","console","log","value","places","SearchBox","starting","controls","ControlPosition","TOP_LEFT","setBounds","getBounds","getPlaces","bounds","LatLngBounds","forEach","place","geometry","viewport","union","extend","location","fitBounds","startApp","wrapper","innerHTML","style","display","createSearchbar","createElement","type","className","marginTop","appendChild","window","onload"],"mappings":"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","file":"script.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var objectArray = [];\nvar map;\nvar starting = false;\nvar wrapper = document.getElementById(\"wrapper\");\nvar infowindow = null;\nvar markers = [];\n\n\n// maps maker\n// =============================================================================\nfunction initMap() {\n  let center = new google.maps.LatLng(56.183330,10.233330);\n  let mapOptions = {\n    zoom: 5,\n    center: center\n  };\n  map = new google.maps.Map(document.getElementById(\"map\"), mapOptions);\n}\n\n\n// data verwerking\n// =============================================================================\nfunction dataReq() {\n  let url = \"https://data.nasa.gov/resource/y77d-th95.json\";\n  let token = \"?$$app_token=UXXSKk12eqwgjmNvwKQqcx7u6\";\n  let xmlHttp = new XMLHttpRequest();\n\n  xmlHttp.onreadystatechange = function() {\n    if (xmlHttp.readyState == 4 && xmlHttp.status == 200)\n      parseData(xmlHttp.responseText);\n  };\n  xmlHttp.open( \"GET\", url + token, false ); // false for synchronous request\n  xmlHttp.send();\n}\n\nfunction parseData(data){\n  let item = JSON.parse(data);\n  // for (var i = 0; i < item.length; i++) {\n  for (var i = 0; i < 300; i++) {\n    let newObject = {\n      name: item[i].name,\n      id: item[i].id,\n      fall: item[i].fall,\n      lat: item[i].reclat,\n      long: item[i].reclong,\n      year: item[i].year,\n      geo: item[i].geolocation,\n    };\n    objectArray.push(newObject);\n  }\n  marker();\n}\n\n\n// markers google maps\n// =============================================================================\n\nfunction marker() {\n  for(var i = 0; i < objectArray.length; i++){\n    let pos = {lat: Number(objectArray[i].lat), lng: Number(objectArray[i].long)};\n    var marker = new google.maps.Marker({\n      position: pos,\n      map: map,\n      clicable: true,\n      id: objectArray[i].id,\n      name: objectArray[i].name,\n      fall: objectArray[i].fall,\n      year: (new Date(objectArray[i].year)).toUTCString().substring(0, 16),\n    });\n    markers.push(marker);\n  }\n  var markerCluster = new MarkerClusterer(map, markers, {imagePath: './images/m'});\n  infoWindow();\n}\n\n\n// info window\n// =============================================================================\n\nfunction infoWindow() {\n  infowindow = new google.maps.InfoWindow({\n    content: \"Holder....\",\n  });\n\n  for (var i = 0; i < markers.length; i++) {\n    var marker = markers[i];\n    google.maps.event.addListener(marker, 'click', function () {\n      // info van de ma\n      infowindow.setContent(\n        \"<h3>\" + this.name + \"</h3>\" + \"<ul class='info'>\" +\n          \"<li><span>Fell:</span> \" + this.fall + \"</li>\" +\n          \"<li><span>Year:</span> \" + this.year + \"</li>\" +\n          \"<li><span>geo:</span> \" + this.position + \"</li>\" +\n        \"</ul>\"\n      );\n      infowindow.open(map, this);\n    });\n  }\n}\n// GOOGLE MAPS SEARCH BOX\n// =============================================================================\nfunction searchBox() {\n  var input = document.getElementById('pac-input');\n  console.log(input.value);\n  var searchBox = new google.maps.places.SearchBox(input);\n  if (starting){\n    map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);\n  }\n  // Bias the SearchBox results towards current map's viewport.\n  map.addListener('bounds_changed', function() {\n    searchBox.setBounds(map.getBounds());\n  });\n\n  searchBox.addListener('places_changed', function() {\n    var places = searchBox.getPlaces();\n\n    if (places.length == 0) {\n      return;\n    }\n    // For each place, get the icon, name and location.\n    var bounds = new google.maps.LatLngBounds();\n    places.forEach(function(place) {\n      if (!place.geometry) {\n        console.log(\"Returned place contains no geometry\");\n        return;\n      }\n\n      if (place.geometry.viewport) {\n        // Only geocodes have viewport.\n        bounds.union(place.geometry.viewport);\n      } else {\n        bounds.extend(place.geometry.location);\n      }\n    });\n    map.fitBounds(bounds);\n    if(starting === false) {\n      startApp();\n    }\n  });\n}\n\n\n// homepage - sluiten\n// =============================================================================\n\nfunction startApp() {\n  wrapper.innerHTML = \"\";\n  wrapper.style.display = 'none';\n  starting = true;\n  createSearchbar();\n}\n\nfunction createSearchbar() {\n  var input = document.createElement(\"input\");\n  input.type = \"text\";\n  input.className = \"controls\"; // set the CSS class\n  input.id = \"pac-input\"; // set the CSS class\n  input.style.marginTop = \"9px\";\n  wrapper.appendChild(input);\n  searchBox();\n}\n\n\n// start\n// =============================================================================\nwindow.onload = function () {\n  initMap();\n  dataReq();\n  searchBox()\n};\n"],"sourceRoot":"/source/"}